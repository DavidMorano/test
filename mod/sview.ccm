/* sview MODULE (primary-module-interface) */
/* charset=ISO8859-1 */
/* lang=C++20 (conformance reviewed) */

/* string-view */
/* version %I% last-modified %G% */


/* revision history:

	= 1998-04-12, David A­D­ Morano
	This code was originally written.

	= 2020-05-07, David A-D- Morano
	I converted this (formerly a header-only file) to a module.

*/

/* Copyright © 1998,2020 David A­D­ Morano.  All rights reserved. */

module ;

#include	<envstandards.h>	/* MUST be first to configure */
#include	<cstring>		/* |strlen(3c)| */
#include	<clanguage.h>
#include	<utypedefs.h>
#include	<utypealiases.h>
#include	<usysdefs.h>

export module sview ;

export {
    struct sview {
	cchar		*sp ;
	int		sl ;
	constexpr sview() noex : sp(nullptr), sl(0) { } ;
	constexpr sview(cchar *p,int l) noex : sp(p), sl(l) { 
	   if (l < 0) sl = strlen(p) ;
	} ;
	constexpr sview(const sview &o) noex {
	    sp = o.sp ;
	    sl = o.sl ;
	} ;
	constexpr sview(const sview *op) noex {
	    sp = op->sp ;
	    sl = op->sl ;
	} ;
	constexpr const sview &operator = (const sview &o) noex {
	    sp = o.sp ;
	    sl = o.sl ;
	    return *this ;
	} ;
	constexpr const sview &operator = (cchar *op) noex {
	    sp = op  ;
	    sl = strlen(op) ;
	    return *this ;
	} ;
    } ; /* end struct (sview) */
} /* end export */


