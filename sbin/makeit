#!/usr/extra/bin/ksh
# MAKEIT

: ${REPOROOT=:${HOME}/github/test}
export REPOROOT

BUILDTYPE=debug


: ${CGS_INCDIR:=${REPOROOT}/include}}
: ${CGS_CRTDIR:=${REPOROOT}/lib}}
: ${CGS_VALDIR:=${REPOROOT}/lib}}
: ${CGS_LIBDIR:=${REPOROOT}/lib}}

: ${CGS_CPP:=cpp}
: ${CGS_CC:=clang}
: ${CGS_CXX:=clang++}
: ${CGS_LD:=ld}
: ${CGS_RANLIB:=ranlib}
: ${CGS_AR:=ar}
: ${CGS_NM:=nm}

: ${CGS_GCPP:=gcpp13}
: ${CGS_GCC:=gcc13}
: ${CGS_GPP:=gpp13}
: ${CGS_GLD:=gld13}
: ${CGS_GRANLIB:=granlib13}
: ${CGS_GAR:=gar13}
: ${CGS_GNM:=gnm13}
: ${CGS_GCOV:=gcov13}

export CGS_CRTDIR
export CGS_VALDIR
export CGS_LIBDIR

export CGS_CPP
export CGS_CC
export CGS_CXX
export CGS_LD
export CGS_AR
export CGS_NM
export CGS_RANLIB

export CGS_GCPP
export CGS_GCC
export CGS_GPP
export CGS_GLD
export CGS_GAR
export CGS_GNM
export CGS_GRANLIB
export CGS_GCOV


function getflags {
  typeset A DN=/dev/null FL=${1}
  if [[ -n "${FL}" ]] ; then
    A="$( getconf ${1} 2> ${DN} )"
    if [[ "${A}" != 'undefined' ]] && [[ "${A}" != 'error' ]] ; then
      print -- "${A}"
    fi
  fi
}


: ${SYSNAME:=$( uname -s )}
: ${RELEASE:=$( uname -r )}
: ${ARCHITECTURE:=$( uname -p )}
export SYSNAME RELEASE ARCHITECTURE

: ${OSNAME:=${SYSNAME}}
: ${OSNUM:=${RELEASE%%.*}}
export OSNAME OSNUM


# compile for a library 

case ${OSNAME}:${OSNUM} in
Darwin:*)
  : ${CO_GCCALL:=""}
  : ${CO_GCCDEB:="-Wall -Wextra"}
  : ${CO_GCCOPT:="-O"}
  : ${CO_GCCLIB:=""}
  : ${CO_GPPALL:=""}
  : ${CO_GPPDEB:="-Wall -Wextra"}
  : ${CO_GPPOPT:="-O"}
  : ${CO_GPPLIB:=""}
  ;;
SunOS:*)
  : ${CO_GCCALL:="-pthreads"}
  case "${ARCHITECTURE}" in
  sparc)
    CO_GCOPARC="-mcpu=v9"
    CO_GCCLIBSPARC="-mno-app-regs "
    : ${CO_GCCOPT:="-O3 ${CO_GCOPARC}"}
    : ${CO_GCCLIB:="-fpic ${CO_GCCLIBSPARC}"}
    ;;
  *)
    : ${CO_GCCOPT:="-O3"}
    ;;
  esac
  : ${CO_GCCOPT:="-O3"}
  : ${CO_GCCLIB:="-fpic"}
  : ${CO_CCALL:="-MT"}
  : ${CO_CCOPT:="-O"}
  : ${CO_CCLIB:="-Kpic"}
  ;;
esac

export CO_CCALL 
export CO_CCDEB
export CO_CCOPT 
export CO_CCLIB

export CO_CXXALL 
export CO_CXXDEB
export CO_CXXOPT 
export CO_CXXLIB

export CO_GCCALL 
export CO_GCCDEB
export CO_GCCOPT
export CO_GCCLIB

export CO_GPPALL 
export CO_GPPDEB
export CO_GPPOPT
export CO_GPPLIB

# compiler and flags seletion for MAKE
CFLAGS=
CCFLAGS=

case ${BUILDTYPE} in
debug)
  MAKECPPFLAGS=
  MAKECFLAGS="${CO_GCCALL} ${CO_GCCDEB} ${CO_GCCOPT} ${CO_GCCLIB}"
  MAKECCFLAGS="${CO_GPPALL} ${CO_GPPDEB} ${CO_GPPOPT} ${CO_GPPLIB}"
  MAKELDFLAGS=
  ;;
test)
  ;;
analyze)
  ;;
profile)
  ;;
deliver)
  ;;
esac

export BUILDTYPE
export MAKECPPFLAGS
export MAKECFLAGS
export MAKECCFLAGS
export MAKELDFLAGS


#print -- CGS_CC=${CGS_CC}
#print -- CGS_GPP=${CGS_GPP}
#print -- REPOROOT=${REPOROOT}

export PATH=${REPOROOT}/bin:${PATH}
make "${@}"


